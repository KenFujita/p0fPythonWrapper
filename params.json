{"name":"P0fpythonwrapper","tagline":"p0f Python Wrapper","body":"\r\n\t=====================================================================\r\n\t\tPassive OS Fingerprinting (p0f) Python Wrapper (p0fmod) \r\n\t\t\t\tby Vivek Chand (vivekchand19@gmail.com)\r\n\t=====================================================================\r\n   \r\n  What is this?\r\n\thttp://lcamtuf.coredump.cx/p0f3/\r\n\r\n\t Passive OS Fingerprinting Python Wrapper has the following APIs:\r\n\r\n\tset_fp_file(fname) - set fingerprint file name\r\n\tset_iface(iface)   - set specific n/w interface\r\n\tlist_interfaces()  - list all avail. n/w interfaces \r\n\tset_read_file(fname)  - reads pcap captures frm the read file\r\n\tset_log_file(fname)  - appends grep-friendly log data to the specified file\r\n\tset_api_sock(fname) - listens for API queries on the specified filesystem socket\r\n\ten_daemon_mode() - runs p0f in daemon mode\r\n\tswitch_user(user) - causes p0f to drop privileges\r\n\ten_promisc_mode() - puts the interface specified with iface in promiscuous mode\r\n\tset_api_max_conn(num) - sets the maximum number of simultaneous API connections\r\n\tset_max_conn(c) - sets the maximum number of connections (c) to be tracked\r\n\tset_max_hosts(h) - sets the maximum number of hosts (h) to be tracked\r\n\tset_conn_max_age(c) - sets the timeout for collecting signatures for any connection (c)\r\n\tset_host_idle_limit(h) - sets the timeout for collecting signatures for purging idle hosts\r\n\r\n\tstart_p0f() - Once p0f is configured with the above APIs, Passive OS Fingerprinting\r\n\t\t      can be started by calling this API.\r\n\r\n\r\n\tMiscellaneous APIs:\r\n\t-------------------\r\n\tmk_query(ip_addr) - Prepares the query ready for sending to p0f \r\n\tck_response(response_data) - Prints info of query if response is valid\r\n\r\n\r\n\tImport p0fmod as:\r\n\t-----------------\r\n\t    import p0fmod\r\n\r\n\r\n\tExamples:\r\n\t---------\r\n\t\trun.py  - A simple script that runs p0f on eth0 interface\r\n\t\tclient.py - A simple script that lets to query for an IP addr with a Domain socket to p0f server\r\n\t\t\t\tusage:\r\n\t\t\t\tsudo run.py\r\n\t\t\t\tsudo\tclient.py /path/to/socket host_ip\r\n\t\t\t\t\r\n\tBuild & Install p0fmod:\r\n\t-----------------------\r\n\t\tpython setup.py build && sudo python setup.py install\t\t\r\n\r\n\r\nDetailed Description of APIs:\r\n=============================\r\n\r\nset_fp_file:\r\n------------\r\n\treads fingerprint database (p0f.fp) from the specified location.\r\n\r\n\tThe default location is ./p0f.fp. If you want to install p0f, you\r\n        may want to change FP_FILE in config.h to /etc/p0f.fp.\r\n\r\n\tUsage:\t\r\n\t\tset_fp_file(fname)\r\n\r\n\tReturns:\r\n        \t 0 - success\r\n\t        -1 - Multiple fingerprint files not supported.\r\n\r\n\r\nset_iface:\r\n----------\r\n\tasks p0f to listen on a specific network interface. On un*x, you\r\n        should reference the interface by name (e.g., eth0). On Windows,\r\n        you can use adapter index instead (0, 1, 2...).\t\r\n\r\n\tIf you do not specify an interface, libpcap will probably pick\r\n        the first working interface in your system.\r\n\r\n\tUsage:\r\n\t\tset_iface(iface)\r\n\t\t\r\n\tReturns:\r\n        \t 0 - success\r\n                -1 - Multiple iface not supported (try '-i any').\r\n\r\n\r\nlist_interfaces:\r\n----------------\r\n\t lists all available network interfaces, then quits. Particularly\r\n         useful on Windows, where the system-generated interface names\r\n         are impossible to memorize.\t\r\n\r\n\t Usage:\r\n\t\tlist_interfaces()\r\n\r\n\t\r\n\t Returns:\r\n        \t 0 - success\r\n\r\nset_read_file:\r\n--------------\r\n\tinstead of listening for live traffic, reads pcap captures from\r\n        the specified file. The data can be collected with tcpdump or any\r\n        other compatible tool.\r\n\r\n\tMake sure that snapshot length is large enough not to truncate packets; the\r\n        default may be too small.\r\n\r\n\tUsage:\r\n\t\tset_read_file(fname)\r\n\r\n\tReturns:\r\n\t\t0 - success\r\n               -1 - Multiple read_file not supported.\r\n\r\n\r\nset_log_file:\r\n-------------\r\n\t appends grep-friendly log data to the specified file. The log\r\n         contains all observations made by p0f about every matching\r\n         connection, and may grow large; plan accordingly.\r\n\r\n         Only one instance of p0f should be writing to a particular file\r\n         at any given time; where supported, advisory locking is used to\r\n         avoid problems.\r\n\r\n\t Usage:\r\n\t\tset_log_file(fname)\r\n\r\n\t Returns:\r\n        \t 0 - success\r\n        \t-1 - Multiple log_file not supported.\r\n\r\n\r\nset_api_sock:\r\n-------------\r\n\tlistens for API queries on the specified filesystem socket. This\r\n        allows other programs to ask p0f about its current thoughts about\r\n        a particular host. More information about the API protocol can be\r\n        found in section 4 below.\r\n\r\n        Only one instance of p0f can be listening on a particular socket\r\n        at any given time. The mode is also incompatible with read_file mode.\r\n\r\n\tUsage:\r\n\t\tset_api_sock(fname)\r\n\r\n\tReturns:\r\n\t\t 0 - success\r\n                -1 - Multiple API Sockets not supported.\r\n                -2 - API mode not supported on Windows \r\n\r\nen_daemon_mode:\r\n---------------\r\n\truns p0f in daemon mode: the program will fork into background\r\n        and continue writing to the specified log file or API socket. It\r\n        will continue running until killed, until the listening interface\r\n        is shut down, or until some other fatal error is encountered.\r\n\r\n        This mode requires either log_file or api_sock to be specified.\r\n\r\n\tUsage:\r\n\t\ten_daemon_mode()\r\n\r\n\tReturns:\r\n        \t 0 - success\r\n         \t-1 - Double werewolf mode not supported yet.\r\n\r\n\t\r\nswitch_user:\r\n------------\r\n\tcauses p0f to drop privileges, switching to the specified user\r\n        and chroot()ing itself to said user's home directory.\r\n\r\n        This mode is *highly* advisable (but not required) on un*x\r\n        systems, especially in daemon mode.\r\n\r\n\tUsage:\r\n\t\tswitch_user(user)\r\n\t\r\n\r\nMore arcane settings (you probably don't need to touch these):\r\n==============================================================\r\n\r\nen_promisc_mode:\r\n----------------\r\n\tputs the interface specified with iface in promiscuous mode. If\r\n        supported by the firmware, the card will also process frames not\r\n        addressed to it.\r\n\r\n\tUsage:\r\n\t\ten_promisc_mode()\r\n\r\n\tReturns:\r\n\t\t 0 - success\r\n        \t-1 - Even more promiscuous? People will call me slutty!\r\n\r\nset_api_max_conn:\r\n-----------------\r\n\tsets the maximum number of simultaneous API connections. The\r\n        default is 20; the upper cap is 100.\r\n\r\n\tUsage:\r\n\t\tset_api_max_conn(num)\r\n\t\r\n\tReturns:\r\n\t         0 - success\r\n        \t-1 - Multiple max_conn values not supported.\r\n  \t        -2 - Outlandish value specified for max_conn.\r\n\t        -3 - API mode not supported on Windows \r\n\r\nset_max_conn:\r\n-------------\r\n\tsets the maximum number of connections (c) to be tracked  \r\n\t(default: c = 1,000). \r\n\r\n\tUsage:\r\n\t\tset_max_conn(c)\r\n\r\n\tReturns:\r\n\t\t 0 - success\r\n        \t-1 - Multiple max_conn values not supported.\r\n        \t-2 - Outlandish value specified for max_conn.\r\n\r\n\r\n\r\nset_max_hosts:\r\n--------------\r\n\tsets the maximum number of hosts (h) to be tracked \r\n\t(default: h = 10,000).\r\n\r\n\tUsage:\r\n\t\tset_max_hosts(h)\r\n\r\n\tReturns:\r\n        \t 0 - success\r\n        \t-1 - Multiple max_hosts values not supported.\r\n        \t-2 - Outlandish value specified for max_hosts.\r\n\r\n\r\n        Once the limit for c & h is reached, the oldest 10% entries \r\n\tgets pruned to make room for new data.\r\n\r\n        This setting effectively controls the memory footprint of p0f.\r\n        The cost of tracking a single host is under 400 bytes; active\r\n        connections have a worst-case footprint of about 18 kB. High\r\n        limits have some CPU impact, too, by the virtue of complicating\r\n        data lookups in the cache.\r\n\r\n        NOTE: P0f tracks connections only until the handshake is done,\r\n        and if protocol-level fingerprinting is possible, until few\r\n        initial kilobytes of data have been exchanged. This means that\r\n        most connections are dropped from the cache in under 5 seconds;\r\n        consequently, the 'c' variable can be much lower than the real\r\n        number of parallel connections happening on the wire.\r\n\r\n\r\nset_conn_max_age:\r\n-----------------\r\n\tsets the timeout for collecting signatures for any connection (c)\r\n\t(default: 30s)\r\n\r\n\tThe value must be just high enough to reliably capture SYN, SYN+ACK, \r\n\tand the initial few kB of traffic. Low-performance sites may want \r\n\tto increase it slightly.\r\n\r\n\tUsage:\r\n\t\tset_conn_max_age(c)\r\n\r\n\tReturns:\r\n \t        0 - success\r\n               -1 - Multiple conn_max_age values not supported.\r\n               -2 - Outlandish value specified for conn_max_age.\r\n\r\nset_host_idle_limit:\r\n--------------------\r\n\tsets the timeout for collecting signatures for purging idle hosts \r\n\tfrom in-memory cache (h)\r\n\t(default: 120min)\r\n\r\n\tThis value governs for how long API queries about a previously seen host \r\n\tcan be made; and what's the maximum interval between signatures to still \r\n\ttrigger NAT detection and so on.\r\n\r\n        Raising it is usually not advisable; lowering it to 5-10 minutes may make \r\n\tsense for high-traffic servers, where it is possible to see several unrelated \r\n\tvisitors subsequently obtaining the same dynamic IP from their ISP.\r\n\r\n\tUsage:\r\n\t\tset_host_idle_limit(h)\r\n\r\n\tReturns:\r\n\t        0 - success\r\n               -1 - Multiple host_idle_limit values not supported.\r\n               -2 - Outlandish value specified for host_idle_limit.\r\n\t\r\n\r\nstart_p0f:\r\n----------\r\n\tOnce p0f is configured with the above APIs, Passive OS Fingerprinting \r\n\tcan be started by calling this API.\r\n\t\r\n\tUsage:\r\n\t\tstart_p0f()\r\n\r\n\tReturns:\r\n   \t\t 0 - Success\r\n  \t\t-1 - API mode looks down on ofline captures.\r\n\t\t-2 - api_max_con makes sense only with api_sock.\r\n\t\t-3 - Daemon mode and offline captures don't mix.\r\n\t\t-4 - Daemon mode requires log_file or api_sock.\r\n\t\t-5 - [!] Note: under cygwin, switch_user is largely useless\r\n\t\t-6 - [!] Consider specifying switch_user in daemon mode \r\n\r\n-------------------------------------------------------------------------------------------------------------\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}